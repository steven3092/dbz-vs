{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Steven\\\\dbz-vs\\\\src\\\\game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\n\nconst Game = () => {\n  _s();\n\n  const [press, setPress] = useState({\n    value: 0,\n    increment: 1\n  });\n  const [show, setShow] = useState(true);\n  const [test, setTest] = useState('a');\n  const [press2, setPress2] = useState(0);\n  const [show2, setShow2] = useState(true);\n  const [test2, setTest2] = useState(55);\n  const [counter, setCounter] = useState(5);\n  useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n  useEffect(() => {\n    counter === 0 && document.addEventListener('keypress', () => keyPressedA());\n  }, [counter]); // const [currentKeysPressed, setCurrentKeyPressed] = useState({});\n\n  const keyPressedA = useMemo(event => {\n    var code = event.key;\n    console.log(\"code : \" + code);\n    console.log(\"test : \" + {\n      test\n    });\n\n    if (test === code && code === 'a') {\n      //97 keycode for the key 'a'\n      setTest('e');\n      setPress(press => press + 1);\n      console.log(\"dans le 1ere boucle\");\n    } else if (test === code && code === 'e') {\n      //101 keycode for the 'e'\n      setTest('a');\n      setPress(press => press + 1);\n      console.log(\"dans le 2eme boucle\");\n    }\n  }, []);\n\n  const keyPressedB = event => {\n    var code = event.key;\n    console.log(\"code : \" + code);\n    setPress(press + 1);\n  };\n\n  const onKeyUp = event => {// setCurrentKeyPressed(currentKeysPressed[event.key] = false);\n  };\n\n  const keyPressed2 = event => {\n    event.preventDefault();\n    var code = event.keyCode || event.which;\n    console.log(\"code : \" + code); //console.log(\"test : \" + test);\n\n    if (test2 === code && code === 55) {\n      //97 keycode for the key 'a'\n      setTest2(57);\n      setPress2(press2 + 1);\n    } else if (test2 === code && code === 57) {\n      //101 keycode for the 'e'\n      setTest2(55);\n      setPress2(press2 + 1);\n    }\n  }; // function useClick(onClick, setVal, val) {\n  //     React.useEffect(() => {\n  //       console.log('Click');\n  //       setVal(val + 1);\n  //     }, [onClick]);\n  //   }\n  //   const Home = () => {\n  //     const [val, setVal] = React.useState(0);\n  //     const incrementOnClick = React.useCallback(() => {\n  //       console.log('go set');\n  //       setVal(val + 1);\n  //     } , [setVal, val]);\n  //     useClick(incrementOnClick, setVal, val);\n  //     const { useEffect, useState, useCallback } = React;\n  //     function useClick(onClick, setVal, val) {\n  //       useEffect(() => {\n  //         console.log(\"Click\");\n  //         setVal(val + 1);\n  //       }, [onClick]);\n  //     }\n  //     const Home = () => {\n  //       const [val, setVal] = useState(0);\n  //       const incrementOnClick = useCallback(() => {\n  //         console.log(\"go set\");\n  //         setVal(val => val + 1);\n  //       }, []);\n  //       useClick(incrementOnClick, setVal, val);\n  //       return (\n  //         <div>\n  //           <div>{val}</div>\n  //           <button onClick={incrementOnClick}>Click me</button>\n  //         </div>\n  //       );\n  //     };\n  //     ReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onKeyPress: keyPressedA,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [press, \"  \", test]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }, this) : '', show2 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: press2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"krhxWylZSDk29AmJvVx6gxr+48A=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/Steven/dbz-vs/src/game.js"],"names":["React","useState","useEffect","useCallback","useMemo","Game","press","setPress","value","increment","show","setShow","test","setTest","press2","setPress2","show2","setShow2","test2","setTest2","counter","setCounter","timer","setInterval","clearInterval","document","addEventListener","keyPressedA","event","code","key","console","log","keyPressedB","onKeyUp","keyPressed2","preventDefault","keyCode","which"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\r\n\r\nconst Game = () => {\r\n    const [press, setPress] = useState({value :0, increment: 1});\r\n    const [show, setShow] = useState(true);\r\n    const [test, setTest] = useState('a');\r\n\r\n    const [press2, setPress2] = useState(0);\r\n    const [show2, setShow2] = useState(true);\r\n    const [test2, setTest2] = useState(55);\r\n\r\n\r\n    const [counter, setCounter] = useState(5);\r\n\r\n    useEffect(() => {\r\n        const timer =\r\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n        return () => clearInterval(timer);\r\n    }, [counter]);\r\n\r\n    useEffect(() => {\r\n        counter === 0 && document.addEventListener('keypress', () => keyPressedA())\r\n    }, [counter])\r\n\r\n    // const [currentKeysPressed, setCurrentKeyPressed] = useState({});\r\n\r\n\r\n    const keyPressedA = useMemo((event) => {\r\n        var code = event.key\r\n        console.log(\"code : \" + code);\r\n        console.log(\"test : \" + {test});\r\n        if (test === code && code === 'a') { //97 keycode for the key 'a'\r\n            setTest('e');\r\n            setPress(press => press + 1);\r\n            console.log(\"dans le 1ere boucle\")\r\n        }\r\n        else if (test === code && code === 'e') { //101 keycode for the 'e'\r\n            setTest('a');\r\n            setPress(press => press + 1);\r\n            console.log(\"dans le 2eme boucle\")\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const keyPressedB = (event) => {\r\n        var code = event.key\r\n        console.log(\"code : \" + code);\r\n        setPress(press + 1);\r\n    }\r\n    const onKeyUp = (event) => {\r\n        // setCurrentKeyPressed(currentKeysPressed[event.key] = false);\r\n\r\n    }\r\n    const keyPressed2 = (event) => {\r\n        event.preventDefault();\r\n        var code = event.keyCode || event.which;\r\n        console.log(\"code : \" + code);\r\n        //console.log(\"test : \" + test);\r\n        if (test2 === code && code === 55) { //97 keycode for the key 'a'\r\n            setTest2(57);\r\n            setPress2(press2 + 1);\r\n        }\r\n        else if (test2 === code && code === 57) { //101 keycode for the 'e'\r\n            setTest2(55);\r\n            setPress2(press2 + 1);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // function useClick(onClick, setVal, val) {\r\n    //     React.useEffect(() => {\r\n    //       console.log('Click');\r\n    //       setVal(val + 1);\r\n    //     }, [onClick]);\r\n    //   }\r\n\r\n    //   const Home = () => {\r\n    //     const [val, setVal] = React.useState(0);\r\n    //     const incrementOnClick = React.useCallback(() => {\r\n    //       console.log('go set');\r\n    //       setVal(val + 1);\r\n    //     } , [setVal, val]);\r\n    //     useClick(incrementOnClick, setVal, val);\r\n\r\n\r\n    //     const { useEffect, useState, useCallback } = React;\r\n\r\n    //     function useClick(onClick, setVal, val) {\r\n    //       useEffect(() => {\r\n    //         console.log(\"Click\");\r\n    //         setVal(val + 1);\r\n    //       }, [onClick]);\r\n    //     }\r\n\r\n    //     const Home = () => {\r\n    //       const [val, setVal] = useState(0);\r\n    //       const incrementOnClick = useCallback(() => {\r\n    //         console.log(\"go set\");\r\n    //         setVal(val => val + 1);\r\n    //       }, []);\r\n\r\n    //       useClick(incrementOnClick, setVal, val);\r\n\r\n    //       return (\r\n    //         <div>\r\n    //           <div>{val}</div>\r\n    //           <button onClick={incrementOnClick}>Click me</button>\r\n    //         </div>\r\n    //       );\r\n    //     };\r\n\r\n    //     ReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onKeyPress={keyPressedA}>Start</button> \r\n\r\n            { show ? <h2>{press}  {test}</h2> : ''}\r\n\r\n\r\n            { show2 ? <h2>{press2}</h2> : ''}\r\n            <div>Countdown: {counter}</div>\r\n            {/* {document.addEventListener('keypress', (event) => {console.log('event.key');\r\n                setPress(press + 1); })} */}\r\n\r\n\r\n\r\n            {/* <div>{val}</div>\r\n          <button onClick={incrementOnClick}>Click me</button> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}