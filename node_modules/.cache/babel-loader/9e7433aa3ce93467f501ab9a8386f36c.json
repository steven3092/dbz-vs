{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Steven\\\\dbz-vs\\\\src\\\\game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\n\nconst Game = () => {\n  _s();\n\n  const [press, setPress] = useState(0);\n  const [press2, setPress2] = useState(0);\n  const [show, setShow] = useState(true);\n  const [testA, setTestA] = useState([\"a\", \"e\"]);\n  const [testB, setTestB] = useState([\"i\", \"p\"]);\n  useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n  useEffect(() => {\n    counter === 0 && document.addEventListener('keypress', keyPressedA);\n  }, [counter]);\n  useEffect(() => {\n    counter === 0 && document.addEventListener('keypress', keyPressedB);\n  }, [counter]);\n  var countA = 0;\n\n  const keyPressedA = event => {\n    var code = event.key;\n    console.log(\"code : \" + code);\n    console.log(\"count : \" + count);\n    console.log(\"test : \" + test[countA]);\n\n    if (testA[countA] === code && code === 'i') {\n      //97 keycode for the key 'a'\n      countA = 1;\n      setPress(press => press + 1);\n      console.log(\"dans le 1ere boucle\");\n      console.log(\"count dans le 1ere boucle: \" + countA);\n    } else if (testA[countA] === code && code === 'p') {\n      //101 keycode for the 'e'\n      countA = 0;\n      setPress(press => press + 1);\n      console.log(\"dans le 2eme boucle\");\n      console.log(\"count dans le 2eme boucle : \" + countA);\n    }\n\n    ZZ;\n  };\n\n  var countB = 0;\n\n  const keyPressedB = event => {\n    var code = event.key;\n    console.log(\"code : \" + code);\n    console.log(\"count : \" + count);\n    console.log(\"test : \" + test[countB]);\n\n    if (testB[countB] === code && code === 'a') {\n      //97 keycode for the key 'a'\n      countB = 1;\n      setPress2(press2 => press2 + 1);\n      console.log(\"dans le 1ere boucle\");\n      console.log(\"count dans le 1ere boucle: \" + countB);\n    } else if (testB[countB] === code && code === 'e') {\n      //101 keycode for the 'e'\n      countB = 0;\n      setPress2(press2 => press2 + 1);\n      console.log(\"dans le 2eme boucle\");\n      console.log(\"count dans le 2eme boucle : \" + countB);\n    }\n  }; // function useClick(onClick, setVal, val) {\n  //     React.useEffect(() => {\n  //       console.log('Click');\n  //       setVal(val + 1);\n  //     }, [onClick]);\n  //   }\n  //   const Home = () => {\n  //     const [val, setVal] = React.useState(0);\n  //     const incrementOnClick = React.useCallback(() => {\n  //       console.log('go set');\n  //       setVal(val + 1);\n  //     } , [setVal, val]);\n  //     useClick(incrementOnClick, setVal, val);\n  //     const { useEffect, useState, useCallback } = React;\n  //     function useClick(onClick, setVal, val) {\n  //       useEffect(() => {\n  //         console.log(\"Click\");\n  //         setVal(val + 1);\n  //       }, [onClick]);\n  //     }\n  //     const Home = () => {\n  //       const [val, setVal] = useState(0);\n  //       const incrementOnClick = useCallback(() => {\n  //         console.log(\"go set\");\n  //         setVal(val => val + 1);\n  //       }, []);\n  //       useClick(incrementOnClick, setVal, val);\n  //       return (\n  //         <div>\n  //           <div>{val}</div>\n  //           <button onClick={incrementOnClick}>Click me</button>\n  //         </div>\n  //       );\n  //     };\n  //     ReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onKeyPress: keyPressedA,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: press\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 22\n    }, this) : '', show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: press2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 22\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"oflsptvagKIv9y9jrP4b90XffKw=\");\n\n_c = Game;\nexport default _c2 = /*#__PURE__*/React.memo(Game);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Steven/dbz-vs/src/game.js"],"names":["React","useState","useEffect","useCallback","useMemo","Game","press","setPress","press2","setPress2","show","setShow","testA","setTestA","testB","setTestB","timer","counter","setInterval","setCounter","clearInterval","document","addEventListener","keyPressedA","keyPressedB","countA","event","code","key","console","log","count","test","ZZ","countB","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\r\n\r\nconst Game = () => {\r\n    const [press, setPress] = useState(0);\r\n    const [press2, setPress2] = useState(0);\r\n\r\n    const [show, setShow] = useState(true);\r\n\r\n    const [testA, setTestA] = useState([\"a\", \"e\"]);\r\n    const [testB, setTestB] = useState([\"i\", \"p\"]);\r\n\r\n  \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const timer =\r\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n        return () => clearInterval(timer);\r\n    }, [counter]);\r\n\r\n    useEffect(() => {\r\n        counter === 0 && document.addEventListener('keypress', keyPressedA)\r\n    }, [counter])\r\n\r\n    useEffect(() => {\r\n        counter === 0 && document.addEventListener('keypress', keyPressedB)\r\n    }, [counter])\r\n\r\n    var countA = 0;\r\n    const keyPressedA = (event) => {\r\n        var code = event.key;\r\n\r\n        console.log(\"code : \" + code);\r\n        console.log(\"count : \" + count);\r\n        console.log(\"test : \" + test[countA]);\r\n        if (testA[countA] === code && code === 'i') { //97 keycode for the key 'a'\r\n            countA = 1;\r\n            setPress(press => press + 1);\r\n            console.log(\"dans le 1ere boucle\")\r\n            console.log(\"count dans le 1ere boucle: \" + countA);\r\n\r\n        }\r\n        else if (testA[countA] === code && code === 'p') { //101 keycode for the 'e'\r\n            countA = 0;\r\n            setPress(press => press + 1);\r\n            console.log(\"dans le 2eme boucle\")\r\n            console.log(\"count dans le 2eme boucle : \" + countA);\r\n\r\n        }ZZ\r\n    }\r\n\r\n    var countB = 0;\r\n    const keyPressedB = (event) => {\r\n        var code = event.key;\r\n\r\n        console.log(\"code : \" + code);\r\n        console.log(\"count : \" + count);\r\n        console.log(\"test : \" + test[countB]);\r\n        if (testB[countB] === code && code === 'a') { //97 keycode for the key 'a'\r\n            countB = 1;\r\n            setPress2(press2 => press2 + 1);\r\n            console.log(\"dans le 1ere boucle\")\r\n            console.log(\"count dans le 1ere boucle: \" + countB);\r\n\r\n        }\r\n        else if (testB[countB] === code && code === 'e') { //101 keycode for the 'e'\r\n            countB = 0;\r\n            setPress2(press2 => press2 + 1);\r\n            console.log(\"dans le 2eme boucle\")\r\n            console.log(\"count dans le 2eme boucle : \" + countB);\r\n\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    // function useClick(onClick, setVal, val) {\r\n    //     React.useEffect(() => {\r\n    //       console.log('Click');\r\n    //       setVal(val + 1);\r\n    //     }, [onClick]);\r\n    //   }\r\n\r\n    //   const Home = () => {\r\n    //     const [val, setVal] = React.useState(0);\r\n    //     const incrementOnClick = React.useCallback(() => {\r\n    //       console.log('go set');\r\n    //       setVal(val + 1);\r\n    //     } , [setVal, val]);\r\n    //     useClick(incrementOnClick, setVal, val);\r\n\r\n\r\n    //     const { useEffect, useState, useCallback } = React;\r\n\r\n    //     function useClick(onClick, setVal, val) {\r\n    //       useEffect(() => {\r\n    //         console.log(\"Click\");\r\n    //         setVal(val + 1);\r\n    //       }, [onClick]);\r\n    //     }\r\n\r\n    //     const Home = () => {\r\n    //       const [val, setVal] = useState(0);\r\n    //       const incrementOnClick = useCallback(() => {\r\n    //         console.log(\"go set\");\r\n    //         setVal(val => val + 1);\r\n    //       }, []);\r\n\r\n    //       useClick(incrementOnClick, setVal, val);\r\n\r\n    //       return (\r\n    //         <div>\r\n    //           <div>{val}</div>\r\n    //           <button onClick={incrementOnClick}>Click me</button>\r\n    //         </div>\r\n    //       );\r\n    //     };\r\n\r\n    //     ReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onKeyPress={keyPressedA}>Start</button>\r\n\r\n            { show ? <h2>{press}</h2> : ''}\r\n\r\n\r\n            { show ? <h2>{press2}</h2> : ''}\r\n            <div>Countdown: {counter}</div>\r\n            {/* {document.addEventListener('keypress', (event) => {console.log('event.key');\r\n                setPress(press + 1); })} */}\r\n\r\n\r\n\r\n            {/* <div>{val}</div>\r\n          <button onClick={incrementOnClick}>Click me</button> */}\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Game);"]},"metadata":{},"sourceType":"module"}