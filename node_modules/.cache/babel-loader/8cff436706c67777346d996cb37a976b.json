{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Steven\\\\dbz-vs\\\\src\\\\game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Game = () => {\n  _s();\n\n  const [press, setPress] = useState(0);\n  const [press2, setPress2] = useState(0);\n  const [show, setShow] = useState(true);\n  const [countDown, setCountDown] = useState(5);\n  const [counterGame, setCounterGame] = useState(0);\n  const isMounted = useRef(false);\n  var testA = \"a\";\n  var testB = \"i\";\n  useEffect(() => {\n    const timer = countDown > 0 && setInterval(() => setCountDown(countDown - 1), 1000);\n    return () => clearInterval(timer);\n  }, [countDown]);\n  useEffect(() => {\n    if (isMounted.current) {\n      countDown === 0 && document.addEventListener('keypress', keyPressedA);\n    } else {\n      isMounted.current = true;\n    }\n  }, [countDown]);\n  useEffect(() => {\n    countDown === 0 && document.addEventListener('keypress', keyPressedB);\n  }, [countDown]);\n  useEffect(() => {\n    const timerGame = countDown === 0 && counterGame <= 9 && setInterval(() => setCounterGame(counterGame + 1), 1000);\n    return () => clearInterval(timerGame);\n  }, [countDown, counterGame]);\n\n  const keyPressedA = event => {\n    var code = event.key;\n    if (counterGame <= 9) if (testA === code && code === 'a') {\n      //for the key 'a'\n      testA = \"e\";\n      setPress(press => press + 1);\n    } else if (testA === code && code === 'e') {\n      //for the 'e'\n      testA = \"a\";\n      setPress(press => press + 1);\n    }\n  };\n\n  const keyPressedB = event => {\n    var code = event.key;\n\n    if (testB === code && code === 'i') {\n      //for the key 'i'\n      testB = \"p\";\n      setPress2(press2 => press2 + 1);\n    } else if (testB === code && code === 'p') {\n      //for the 'p'\n      testB = \"i\";\n      setPress2(press2 => press2 + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: press\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this) : '', show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: press2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Countdown: \", countDown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"CounterGame: \", counterGame]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"OeNoqnX+hBrV+RFtDgvTQbf9YVs=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/Steven/dbz-vs/src/game.js"],"names":["React","useState","useEffect","useRef","Game","press","setPress","press2","setPress2","show","setShow","countDown","setCountDown","counterGame","setCounterGame","isMounted","testA","testB","timer","setInterval","clearInterval","current","document","addEventListener","keyPressedA","keyPressedB","timerGame","event","code","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMc,SAAS,GAAGZ,MAAM,CAAC,KAAD,CAAxB;AAEA,MAAIa,KAAK,GAAG,GAAZ;AACA,MAAIC,KAAK,GAAG,GAAZ;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,KAAK,GACPP,SAAS,GAAG,CAAZ,IAAiBQ,WAAW,CAAC,MAAMP,YAAY,CAACD,SAAS,GAAG,CAAb,CAAnB,EAAoC,IAApC,CADhC;AAEA,WAAO,MAAMS,aAAa,CAACF,KAAD,CAA1B;AACH,GAJQ,EAIN,CAACP,SAAD,CAJM,CAAT;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,SAAS,CAACM,OAAd,EAAuB;AACvBV,MAAAA,SAAS,KAAK,CAAd,IAAmBW,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,WAAtC,CAAnB;AACC,KAFD,MAEO;AACHT,MAAAA,SAAS,CAACM,OAAV,GAAoB,IAApB;AACD;AAEN,GAPQ,EAON,CAACV,SAAD,CAPM,CAAT;AASAT,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,SAAS,KAAK,CAAd,IAAmBW,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCE,WAAtC,CAAnB;AACH,GAFQ,EAEN,CAACd,SAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,SAAS,GACXf,SAAS,KAAK,CAAd,IAAmBE,WAAW,IAAI,CAAlC,IAAuCM,WAAW,CAAC,MAAML,cAAc,CAACD,WAAW,GAAG,CAAf,CAArB,EAAwC,IAAxC,CADtD;AAEA,WAAO,MAAMO,aAAa,CAACM,SAAD,CAA1B;AACH,GAJQ,EAIN,CAACf,SAAD,EAAYE,WAAZ,CAJM,CAAT;;AAOA,QAAMW,WAAW,GAAIG,KAAD,IAAW;AAC3B,QAAIC,IAAI,GAAGD,KAAK,CAACE,GAAjB;AACA,QAAGhB,WAAW,IAAI,CAAlB,EACA,IAAIG,KAAK,KAAKY,IAAV,IAAkBA,IAAI,KAAK,GAA/B,EAAoC;AAAE;AAClCZ,MAAAA,KAAK,GAAG,GAAR;AACAV,MAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;AACH,KAHD,MAIK,IAAIW,KAAK,KAAKY,IAAV,IAAkBA,IAAI,KAAK,GAA/B,EAAoC;AAAE;AACvCZ,MAAAA,KAAK,GAAG,GAAR;AACAV,MAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;AACH;AACJ,GAXD;;AAaA,QAAMoB,WAAW,GAAIE,KAAD,IAAW;AAC3B,QAAIC,IAAI,GAAGD,KAAK,CAACE,GAAjB;;AACA,QAAIZ,KAAK,KAAKW,IAAV,IAAkBA,IAAI,KAAK,GAA/B,EAAoC;AAAE;AAClCX,MAAAA,KAAK,GAAG,GAAR;AACAT,MAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,GAAG,CAApB,CAAT;AACH,KAHD,MAIK,IAAIU,KAAK,KAAKW,IAAV,IAAkBA,IAAI,KAAK,GAA/B,EAAoC;AAAE;AACvCX,MAAAA,KAAK,GAAG,GAAR;AACAT,MAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,GAAG,CAApB,CAAT;AACH;AACJ,GAVD;;AAYA,sBACI;AAAA,eACME,IAAI,gBAAG;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsB,EADhC,EAEMI,IAAI,gBAAG;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAAH,GAAuB,EAFjC,eAGI;AAAA,gCAAiBI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,kCAAmBE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzED;;GAAMT,I;;KAAAA,I;AA0EN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst Game = () => {\r\n    const [press, setPress] = useState(0);\r\n    const [press2, setPress2] = useState(0);\r\n\r\n    const [show, setShow] = useState(true);\r\n\r\n    const [countDown, setCountDown] = useState(5);\r\n    const [counterGame, setCounterGame] = useState(0);\r\n\r\n    const isMounted = useRef(false);\r\n\r\n    var testA = \"a\";\r\n    var testB = \"i\";\r\n\r\n    useEffect(() => {\r\n        const timer =\r\n            countDown > 0 && setInterval(() => setCountDown(countDown - 1), 1000);\r\n        return () => clearInterval(timer);\r\n    }, [countDown]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n        countDown === 0 && document.addEventListener('keypress', keyPressedA);\r\n        } else {\r\n            isMounted.current = true;\r\n          }\r\n\r\n    }, [countDown])\r\n\r\n    useEffect(() => {\r\n        countDown === 0 && document.addEventListener('keypress', keyPressedB);\r\n    }, [countDown])\r\n\r\n    useEffect(() => {\r\n        const timerGame =\r\n            countDown === 0 && counterGame <= 9 && setInterval(() => setCounterGame(counterGame + 1), 1000);\r\n        return () => clearInterval(timerGame);\r\n    }, [countDown, counterGame]);\r\n\r\n\r\n    const keyPressedA = (event) => {\r\n        var code = event.key;\r\n        if(counterGame <= 9)\r\n        if (testA === code && code === 'a') { //for the key 'a'\r\n            testA = \"e\";\r\n            setPress(press => press + 1);\r\n        }\r\n        else if (testA === code && code === 'e') { //for the 'e'\r\n            testA = \"a\";\r\n            setPress(press => press + 1);\r\n        }\r\n    }\r\n\r\n    const keyPressedB = (event) => {\r\n        var code = event.key;\r\n        if (testB === code && code === 'i') { //for the key 'i'\r\n            testB = \"p\";\r\n            setPress2(press2 => press2 + 1);\r\n        }\r\n        else if (testB === code && code === 'p') { //for the 'p'\r\n            testB = \"i\";\r\n            setPress2(press2 => press2 + 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { show ? <h2>{press}</h2> : ''}\r\n            { show ? <h2>{press2}</h2> : ''}\r\n            <div>Countdown: {countDown}</div>\r\n            <div>CounterGame: {counterGame}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}